server:
  port: 8088

spring:
  application:
    name: maps-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/maps_db
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  cache:
    type: redis
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  jackson:
    time-zone: UTC
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}
    health-check-url-path: /actuator/health
    status-page-url-path: /actuator/info

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,caches
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    main.java.com.example.WeePetClinic: DEBUG
    org.springframework.cache: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/maps-service.log

# Cache Configuration
spring:
  cache:
    redis:
      time-to-live: 3600000 # 1 hour
      cache-null-values: false
      key-prefix: "maps:"
      default-expiration: 1800000 # 30 minutes

# Maps Service Specific Configuration
maps:
  service:
    max-search-radius: 50.0 # Maximum search radius in km
    default-search-radius: 10.0 # Default search radius in km
    max-results: 100 # Maximum results for location searches
    enable-geocoding: true # Enable address to coordinates conversion
    enable-weather: true # Enable weather data integration
    enable-routing: true # Enable route planning features
  
  geocoding:
    provider: "openstreetmap" # Geocoding service provider
    api-key: "" # API key if required
    rate-limit: 100 # Requests per minute
  
  weather:
    provider: "openweathermap" # Weather service provider
    api-key: "" # API key if required
    update-interval: 300000 # Update interval in milliseconds (5 minutes)
  
  routing:
    provider: "openrouteservice" # Routing service provider
    api-key: "" # API key if required
    supported-modes: ["driving", "walking", "cycling", "transit"]
    max-waypoints: 25 # Maximum waypoints per route

# Security Configuration (if needed)
security:
  jwt:
    secret: your-maps-service-jwt-secret-key
    expiration: 86400000 # 24 hours
